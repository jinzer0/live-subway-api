import requests as r
from pyfiglet import Figlet
import re
import time

station_data = ['소요산', '동두천', '보산', '동두천중앙', '지행', '덕정', '덕계', '양주', '녹양', '가능', '의정부', '회룡', '망월사', '도봉산', '도봉', '방학', '창동', '녹천', '월계', '광운대', '석계',
                '신이문', '외대앞', '회기', '청량리', '제기동', '신설동', '동묘앞', '동대문', '종로5가', '종로3가', '종각', '시청', '서울', '남영', '용산', '노량진', '대방', '신길', '영등포', '신도림',
                '구로', '구일', '개봉', '오류동', '온수', '역곡', '소사', '부천', '중동', '송내', '부개', '부평', '백운', '동암', '간석', '주안', '도화', '제물포', '도원', '동인천', '인천',
                '가산디지털단지', '독산', '금천구청', '석수', '관악', '안양', '명학', '금정', '군포', '당정', '의왕', '성균관대', '화서', '수원', '세류', '병점', '세마', '오산대', '오산', '진위',
                '송탄', '서정리', '지제', '평택', '성환', '직산', '두정', '천안', '봉명', '쌍용(나사렛대)', '아산', '탕정', '배방', '온양온천', '신창', '시청', '을지로입구', '을지로3가', '을지로4가',
                '동대문역사문화공원', '신당', '상왕십리', '왕십리', '한양대', '뚝섬', '성수', '건대입구', '구의', '강변', '잠실나루', '잠실', '잠실새내', '종합운동장', '삼성', '선릉', '역삼', '강남', '교대',
                '서초', '방배', '사당', '낙성대', '서울대입구', '봉천', '신림', '신대방', '구로디지털단지', '대림', '신도림', '문래', '영등포구청', '당산', '합정', '홍대입구', '신촌', '이대', '아현',
                '충정로', '용답', '신답', '용두', '신설동', '도림천', '양천구청', '신정네거리', '까치산', '원흥', '대화', '주엽', '정발산', '마두', '백석', '대곡', '화정', '원당', '삼송', '지축',
                '구파발', '연신내', '불광', '녹번', '홍제', '무악재', '독립문', '경복궁', '안국', '종로3가', '을지로3가', '충무로', '동대입구', '약수', '금호', '옥수', '압구정', '신사', '잠원',
                '고속터미널', '교대', '남부터미널', '양재', '매봉', '도곡', '대치', '학여울', '대청', '일원', '수서', '가락시장', '경찰병원', '오금', '당고개', '상계', '노원', '창동', '쌍문', '수유',
                '미아', '미아사거리', '길음', '성신여대입구', '한성대입구', '혜화', '동대문', '동대문역사문화공원', '충무로', '명동', '회현', '서울', '숙대입구', '삼각지', '신용산', '이촌', '동작',
                '총신대입구(이수)', '사당', '남태령', '선바위', '경마공원', '대공원', '과천', '정부과천청사', '인덕원', '평촌', '범계', '금정', '산본', '수리산', '대야미', '반월', '상록수', '한대앞', '중앙',
                '고잔', '초지', '안산', '신길온천', '정왕', '오이도', '방화', '개화산', '김포공항', '송정', '마곡', '발산', '우장산', '화곡', '까치산', '신정(은행정)', '목동', '오목교(목동운동장앞)',
                '양평', '영등포구청', '영등포시장', '신길', '여의나루', '마포', '공덕', '애오개', '충정로', '서대문', '광화문', '종로3가', '을지로4가', '동대문역사문화공원', '청구', '신금호', '행당', '왕십리',
                '마장', '답십리', '장한평', '군자(능동)', '아차산(어린이대공원후문)', '광나루(장신대)', '천호(풍납토성)', '강동', '둔촌동', '올림픽공원(한국체대)', '방이', '오금', '개롱', '거여', '마천', '길동',
                '굽은다리(강동구민회관앞)', '명일', '고덕', '상일동', '강일', '미사', '하남풍산', '하남시청', '하남검단산', '응암순환(상선)', '역촌', '불광', '독바위', '연신내', '구산', '새절(신사)',
                '증산(명지대앞)', '디지털미디어시티', '월드컵경기장(성산)', '마포구청', '망원', '합정', '상수', '광흥창', '대흥(서강대앞)', '공덕', '효창공원앞', '삼각지', '녹사평', '이태원', '한강진', '버티고개',
                '약수', '청구', '신당', '동묘앞', '창신', '보문', '안암(고대병원앞)', '고려대', '월곡(동덕여대)', '상월곡(한국과학기술연구원)', '돌곶이', '석계', '태릉입구', '화랑대(서울여대입구)', '봉화산',
                '장암', '도봉산', '수락산', '마들', '노원', '중계', '하계', '공릉(서울산업대입구)', '태릉입구', '먹골', '중화', '상봉', '면목', '사가정', '용마산', '중곡', '군자(능동)',
                '어린이대공원(세종대)', '건대입구', '뚝섬유원지', '청담', '강남구청', '학동', '논현', '반포', '고속터미널', '내방', '총신대입구(이수)', '남성', '숭실대입구(살피재)', '상도(중앙대앞)', '장승배기',
                '신대방삼거리', '보라매', '신풍', '대림', '남구로', '가산디지털단지', '철산', '광명사거리', '천왕', '온수', '까치울', '부천종합운동장', '춘의역', '신중동', '부천시청', '상동', '삼산체육관',
                '굴포천', '부평구청', '산곡', '석남', '암사', '천호(풍납토성)', '강동구청', '몽촌토성(평화의문)', '잠실', '석촌', '송파', '가락시장', '문정', '장지', '복정', '산성',
                '남한산성입구(성남법원, 검찰청)', '단대오거리', '신흥', '수진', '모란', '개화', '김포공항', '공항시장', '신방화', '마곡나루', '양천향교', '가양', '증미', '등촌', '염창', '신목동', '선유도',
                '당산', '국회의사당', '여의도', '샛강', '노량진', '노들', '흑석', '동작', '구반포', '신반포', '고속터미널', '사평', '신논현', '언주', '선정릉', '삼성중앙', '봉은사', '종합운동장', '삼전',
                '석촌고분', '석촌', '송파나루', '한성백제', '올림픽공원', '둔촌오륜', '중앙보훈병원', '용산', '이촌', '서빙고', '한남', '옥수', '응봉', '왕십리', '청량리', '회기', '중랑', '상봉', '망우',
                '양원', '구리', '도농', '양정', '덕소', '도심', '팔당', '운길산', '양수', '신원', '국수', '아신', '오빈', '양평', '원덕', '용문', '지평', '효창공원앞', '공덕', '서강대', '홍대입구',
                '가좌', '디지털미디어시티', '수색', '화전', '강매', '행신', '능곡', '대곡', '곡산', '백마', '풍산', '일산', '탄현', '야당', '운정', '금릉', '금촌', '월롱', '파주', '문산',
                '신촌(경의.중앙선)', '서울', '서울', '공덕', '홍대입구', '디지털미디어시티', '마곡나루', '김포공항', '계양', '검암', '청라국제도시', '영종', '운서', '공항화물청사', '인천공항1터미널',
                '인천공항2터미널', '광운대', '청량리', '회기', '중랑', '상봉', '망우', '신내', '갈매', '별내', '퇴계원', '사릉', '금곡', '평내호평', '천마산', '마석', '대성리', '청평', '상천', '가평',
                '굴봉산', '백양리', '강촌', '김유정', '남춘천', '춘천', '청량리', '왕십리', '서울숲', '압구정로데오', '강남구청', '선정릉', '선릉', '한티', '도곡', '구룡', '개포동', '대모산', '수서',
                '복정', '가천대', '태평', '모란', '야탑', '이매', '서현', '수내', '정자', '미금', '오리', '죽전', '보정', '구성', '신갈', '기흥', '상갈', '청명', '영통', '망포', '매탄권선',
                '수원시청', '매교', '수원', '고색', '오목천', '어천', '야목', '사리', '한대앞', '중앙', '고잔', '초지', '안산', '신길온천', '정왕', '오이도', '달월', '월곶', '소래포구', '인천논현',
                '호구포', '남동인더스파크', '원인재', '연수', '송도', '인하대', '숭의', '신포', '인천', '강남', '양재', '양재시민의숲', '청계산입구', '판교', '정자', '미금', '동천', '수지구청', '성복',
                '상현', '광교중앙', '광교', '인천공항1터미널', '장기주차장', '합동청사', '파라다이스 시티', '워터파크', '용유', '북산한우이', '솔밭공원', '4.19 민주묘지', '가오리', '화계', '삼양', '삼양사거리',
                '솔샘', '북한산보국문', '정릉', '성신여대입구', '보문', '신설동']


# station_xlsx = openpyxl.load_workbook("station_name.xlsx", read_only=True)
# sheet = station_xlsx["역정보"]
# for i in range(2, 632):
#     station_data.append(sheet.cell(row=i, column=3).value)


def get_info(statname: str, subway_id: int):
    heading = ["오른쪽", "왼쪽"]
    msg = ""
    response = r.get(
        f"http://swopenapi.seoul.go.kr/api/subway/4f6f6d4f4766663732374d54754153/json/realtimeStationArrival/0/10/{statname}")
    result = dict(response.json())
    if "realtimeArrivalList" in result.keys():
        count = result["errorMessage"]["total"]
        for i in range(count):
            if result["realtimeArrivalList"][i]["subwayId"] == "100" + str(subway_id):
                if result["realtimeArrivalList"][i]["subwayHeading"] in heading:
                    eta = str(int(int(result["realtimeArrivalList"][i]["barvlDt"]) / 60)) + "분" if int(
                        int(result["realtimeArrivalList"][i]["barvlDt"]) / 60) > 1 else "곧 도착"
                    msg_0 = f"""
    > 기차 방향 : {result["realtimeArrivalList"][i]["trainLineNm"]}
    > 도착 예정 시간 : {eta}
    > 열차 위치 : {result["realtimeArrivalList"][i]["arvlMsg3"]}\n"""
                    heading.remove(result["realtimeArrivalList"][i]["subwayHeading"])
                    msg += msg_0

    elif result["code"].split("-")[1] == '200':
        msg = False

    return msg


def add_station(station_li: list):
    stat_sel = []
    while 1:
        station = input("추가하실 역명을 입력하세요 (예 : 건대, 성수, 잠실 등) : ")
        print()
        for i in station_data:
            m = re.search(station, i)
            if m:
                stat_sel.append(i)

        if len(stat_sel) != 0:
            while 1:
                [print(f"{i + 1} - {stat_sel[i]}") for i in range(len(set(stat_sel)))]
                sel = int(input("추가하실 역의 번호를 입력하세요 : "))
                if sel - 1 in range(len(stat_sel)):
                    num = int(input("몇호선인지 입력하세요 (예 : 2) : "))
                    station_li.append([stat_sel[sel - 1], num])
                    print("역이 추가되었습니다.")
                    print()
                    break
                else:
                    print("잘못된 번호입니다. 다시 입력해주세요!")
            break
        else:
            print("검색된 역명이 없습니다. 다시 검색하세요!")


def delete_station(station_li: list):
    while 1:
        [print(f"{i + 1} - {station_li[i][0]}역, {station_li[i][1]}호선") for i in range(len(station_li))]
        sel = int(input("삭제하실 역의 번호를 입력하세요 : "))
        if sel - 1 in range(len(station_li)):
            station_li.pop(sel - 1)
            print("해당 역이 삭제되었습니다.")
            break
        else:
            print("잘못된 번호입니다. 다시 입력해주세요!")


def realtime_info(station_li: list):
    sel = "y"
    while sel == "y":
        print("================================")
        for station, number in station_li:
            print(f"{station}역 {number}호선")
            print(get_info(station, number))
            print("================================")
        sel = input("새로고침 하려면 y, 메뉴로 돌아가려면 n을 눌러주세요 : ")
        print()
        if sel == "n":
            return


def quit():
    sel = input("정말 종료하시겠습니까? (y) : ")
    if sel == "y":
        return True
    else:
        return False


def main():
    station_list = []
    f = Figlet(font='banner3', width=1000)
    print(f.renderText("S U B W A Y - T R A C K E R"))
    print("\n 실시간 지하철 도착 정보를 알려주는 프로그램입니다.\n================================================================\n")
    time.sleep(0.6)
    while 1:
        print("================")
        print("\t  메뉴")
        print("================")
        print("1 - 역 추가")
        print("2 - 역 삭제")
        print("3 - 실시간 도착 정보 보기")
        print("4 - 종료")
        print("================")
        sel = int(input("메뉴를 선택하세요 : "))
        print()

        if sel == 1:
            add_station(station_list)

        if sel == 2:
            delete_station(station_list)

        if sel == 3:
            realtime_info(station_list)

        if sel == 4:
            if quit():
                return


main()
